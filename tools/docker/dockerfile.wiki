= Декларации =
* `FROM` - имя базового (родительского) образа
* `ENV` - установка переменных окружения
* `RUN` - запуск команды во время сборки образа
* `ADD` - копирование каталога хоста в образ
* `EXPOSE` - открытие порта
* `VOLUME` - открытие каталога
* `ENTRYPOINT` - точка входа контейнера при его запуске
* `CMD` - параметры точки входа контейнера при его запуске по умолчанию

= Пример =
== Использование ENTRYPOINT и CMD ==
{{{
FROM alpine

# При запуске контейнера запускать команду ping
ENTRYPOINT ping
# По умолчанию, при запуске передавать параметр localhost в команду ping
CMD localhost
}}}

Сборка и запуск образа:
{{{bash
docker build -t pinger ./
# Запуск контейнера с командой "ping localhost"
docker run --rm pinger
# Запуск контейнера с командой "ping site.com" (замена параметров CMD)
docker run --rm pinger site.com
}}}

== Конфигурация образа для разработки web-сервиса ==
{{{
# За основу взят образ с предустановленым nginx, php и fpm
FROM richarvey/nginx-php-fpm

# Корневой каталог сайта доступен для монтирования из вне
VOLUME /var/www/html

# Порт 80 доступен для монтирования из вне
EXPOSE 80

# Запуск веб-сервера при старте контейнера в качестве основной команды
ENTRYPOINT /bin/apache2
}}}

Сборка и запуск образа:
{{{bash
docker build vendor/service .
docker run -v /home/user/html:/var/www/html -p 8000:80 -d vendor/service
}}}

== Конфигурация образа для запуска httpd ==
{{{
FROM alpine

RUN mkdir /var/www
COPY ./index.html /var/www/index.html

EXPOSE 80

ENTRYPOINT httpd -p 80 -f -h /var/www
}}}

Сборка и запуск образа:
{{{bash
docker build vendor/service .
docker run -p 8000:80 -d vendor/service
}}}
