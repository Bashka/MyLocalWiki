= Описание =
`docker create [OPTIONS] IMAGE [COMMAND]`

Создает новый контейнер на основе образа.

= Аргументы =
* `-i` - связывает STDIN хоста с контейнером
* `-t` - создает виртуальный терминал в контейнере и связывает его с STDOUT хоста
* `-p` - проброс портов
* `-v` - проброс каталогов
* `--network=bridge` - запуск контейнера в указанной сети

*Важно*: имена всех контейнеров (или ID, если имя не указано) запущенных в той же сети будут автоматически добавлены в файл `/etc/hosts`

* `--name=my_container` - задает имя будущему контейнеру
* `--user=i` - задает владельца контейнера
* `--restart` - автоматически перезапускать контейнер при отключении
* `--rm` - автоматически удалять контейнер при отключении

= Пример =
Создание и запуск контейнера:
{{{bash
docker create --name="my_container" my_image
docker start my_container
}}}

Подключение к запущенному контейнеру в режиме терминала:
{{{bash
docker exec -it my_container /bin/bash
}}}

Пример добавления IP адреса контейнеров, находящихся в одной сети в файл `/etc/hosts`:
{{{bash
root@86530563eda9:/# cat /etc/hosts
127.0.0.1	localhost
::1	localhost ip6-localhost ip6-loopback
fe00::0	ip6-localnet
ff00::0	ip6-mcastprefix
ff02::1	ip6-allnodes
ff02::2	ip6-allrouters
172.17.0.3	86530563eda9
}}}
