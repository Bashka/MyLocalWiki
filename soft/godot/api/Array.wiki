= Описание =
Встроеный тип данных, представляющий массивы.

*Важно:* элементы массива индексируются с нуля.

Некоторые классы массивов строго типизированы:
* `ByteArray` - массив байт [0, 255]
* `IntArray` - массив целых чисел
* `FloatArray` - массив дробных чисел
* `StringArray` - массив строк
* `Vector2Array` - массив двумерных векторов
* `Vector3Array` - массив трехмерных векторов
* `ColorArray` - массив цветов

= Методы =
* Информация:
	* `int size()` - количество элементов
	* `bool empty()` - `true` если массив пустой
* Элементы:
	* `bool has(value)` - определение вхождения значения в массив
	* `mixed front()` - первый элемент массива
	* `mixed back()` - последний элемент массива
	* `int count(value)` - количество вхождений данного значения в массив
	* `void append(value)` - добавление элемента в конец массива
	* `void push_back(value)` - добавление элемента в конец массива
	* `void push_front(value)` - добавление элемента в начало массива
	* `void pop_back()` - удаление элемента с конца массива
	* `void pop_front()` - удаление элемента с начала массива
	* `void inset(int index, value)` - установка значения элементу массива или в его конец
	* `void invert()` - переворачивание массива
	* `void clear()` - удаление всех элементов массива
	* `void erase(value)` - поиск и удаление первого элемента, содержащего значение
	* `void remove(int index)` - удаление элемента массива по его индексу
	* `int find(what, int from = 0)` - поиск элемента с заданым значением и возврат его индекса (`-1` если элемент не найден)
	* `int rfind(what, int from = -1)` поиск элемента с заданым значением с конца массива и возврат его индекса (`-1` если элемент не найден)
	* `void sort()` - сортировка элементов массива по возрастанию
	* `void sort_custom(Object obj, String func)` - сортировка элементов массива с использованием пользовательской функции (функция принимает два элемента массива и должна возвращать `true` если первый элемент меньше второго и `false` в противном случае)
